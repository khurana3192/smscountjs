{"name":"Smscountjs","tagline":"Get sms count (cyrillic, latin)","body":"### What is *smscountjs*?\r\nIt provides you some ways to obtain sms count and characters left via provided text string\r\n\r\n### Why i need it?\r\nSometimes may be useful to integrate into your project sms newsletter. So, once you've done it, it would be nice to have some hints (for those who will write sms text) such as total sms count and character left to next sms. At this point you need **smscountjs**\r\n\r\n### How can i use it?\r\nJust include `smscount.min.js` to your html document, create `SMS` instance and call `count` method or use `smsCount` method of `String` object\r\n\r\n### Examples, examples!\r\nLet's see, how it works by first way:\r\n\r\n\tvar sms = SMS(), // also you can use `new` keyword\r\n\t\ttext = 'Hello, world! This is a simple example of how to use `smscountjs` to calculate ' +\r\n\t\t\t'current total sms count and characters left to next sms. SMS in latin may contain ' +\r\n\t\t\t'160 characters per SMS';\r\n        \r\n    sms.count(text, function(totalCount, charsLeft, source) {\r\n\t\tconsole.log('total: ' + totalCount); // total sms count\r\n\t\tconsole.log('left: ' + charsLeft); // characters left to next sms\r\n\t\tconsole.log(parts); // source text separated by SMS limitation \r\n    });\r\n\r\nCode above will output:\r\n![This image][1]\r\n\r\nIf you prefer to use `smscount` directly with String, just make same:\r\n\r\n\tvar text = 'Hello, world! This is a simple example of how to use `smscountjs` to calculate ' +\r\n\t\t'current total sms count and characters left to next sms. SMS in latin may contain ' +\r\n\t\t'160 characters per SMS';\r\n\t\t\r\n\ttext.smsCount(function(totalCount, charsLeft, parts) {\r\n\t\tconsole.log('total: ' + totalCount);\r\n\t\tconsole.log('left: ' + charsLeft);\r\n\t\tconsole.log(parts)\r\n\t});\r\n\t// output will be the same as above\r\nSee? It's pretty simple!\r\n\r\n### How about UTF-16?\r\nAs known, SMS protocol can send only 160 bytes of data. Currently `smscount` may work with latin (160 symbols) and cyrillic (70 sybmols). Be free to use both latin and cyrillic encoding\r\n\r\n### Configuration\r\nYou can configure limit for latin and cyrillic encoding, by passing options object to SMS constructor:\r\n\r\n \tvar sms = SMS({\r\n\t\t\tlatin: 50,\r\n\t\t\tcyrillic: 20\r\n\t\t}),\r\n\t\ttext = 'Hello, world! This is a simple example of how to use `smscountjs` to calculate ' +\r\n\t\t\t'current total sms count and characters left to next sms. SMS in latin may contain ' +\r\n\t\t\t'160 characters per SMS';\r\n\r\n\tsms.count(text, function(totalCount, charsLeft, parts) {\r\n\t\tconsole.log('total: ' + totalCount);\r\n\t\tconsole.log('left: ' + charsLeft);\r\n\t\tconsole.log(parts)\r\n\t});\r\nCode above will output:\r\n![enter image description here][2]\r\n\r\nTo configure call from String object, pass options object as first parameter and callback as second:\r\n\r\n\tvar text = 'Hello, world! This is a simple example of how to use `smscountjs` to calculate ' +\r\n\t\t'current total sms count and characters left to next sms. SMS in latin may contain ' +\r\n\t\t'160 characters per SMS';\r\n\t\t\r\n\ttext.smsCount({\r\n\t\tlatin: 50,\r\n\t\tcyrillic: 20\r\n\t}, function(totalCount, charsLeft, parts) {\r\n\t\tconsole.log('total: ' + totalCount);\r\n\t\tconsole.log('left: ' + charsLeft);\r\n\t\tconsole.log(parts)\r\n\t});\r\n\t// output will be the same as above\r\n\r\nThats all, again pretty simple, yeah?\r\n\r\n### License\r\nUnder MIT license (http://www.opensource.org/licenses/mit-license.php)\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n\r\n  [1]: http://clip2net.com/clip/m182888/1407244798-bc3e6-8kb.png?nocache=1\r\n  [2]: http://clip2net.com/clip/m182888/1407248152-7a06b-12kb.png?nocache=1","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}